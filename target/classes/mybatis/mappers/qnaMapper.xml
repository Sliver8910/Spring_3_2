<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="qnaMapper">
	<select id="qnaCount" resultType="java.lang.Integer"
		parameterType="com.ruda.s3.util.RowMaker">
		select count(num) from qna <!-- 검색 했을떄의 totalPage -->
		<choose>
			<when test="kind == 'kt'">
				where title like '%'||#{search}||'%' <!-- ''가 포함되어있음 연걸연산자 ||를 사용 -->
			</when>
			<when test="kind == 'kw'">
				where writer like '%'||#{search}||'%' <!-- ''가 포함되어있음 연걸연산자 ||를 사용 -->
			</when>
			<otherwise>
				where contents like '%'||#{search}||'%'
			</otherwise>
		</choose>
	</select>
	<select id="qnaList" resultType="com.ruda.s3.model.board.QnaVO"
		parameterType="com.ruda.s3.util.RowMaker">
		<!-- 동적 sql문 choose(swich case와 동일)을 써서 검색하는 sql문추가, 컬럼명은 #{}이런식으로 추가 불가능 -->
		select * from
		(select N.*, rownum R from
		(select * from qna
		<choose>
			<when test="kind == 'kt'">
				where title like '%'||#{search}||'%' <!-- ''가 포함되어있음 연걸연산자 ||를 사용 -->
			</when>
			<when test="kind == 'kw'">
				where writer like '%'||#{search}||'%' <!-- ''가 포함되어있음 연걸연산자 ||를 사용 -->
			</when>
			<otherwise>
				where contents like '%'||#{search}||'%'
			</otherwise>
		</choose>
		order by ref desc, step asc)N)
		where R between #{startRow} and #{lastRow}
	</select>
	<insert id="qnaWrite"
		parameterType="com.ruda.s3.model.board.QnaVO">
		insert into qna values(board_seq.nextval, #{title}, #{writer},
		#{contents},sysdate, 0,board_seq.currval,0,0)
	</insert>
	
	<delete id="qnaDelete" parameterType="java.lang.Integer">
		delete qna where num=#{num}
	</delete>
	
	<update id="qnaUpdate" parameterType="com.ruda.s3.model.board.QnaVO">
		update qna set title=#{title}, writer=#{writer}, contents=#{contents}
		where num=#{num}
	</update>
	
	<select id="qnaSelect" resultType="com.ruda.s3.model.board.QnaVO" parameterType="java.lang.Integer">
		select * from qna where num=#{num}
	</select>
	
	<insert id="qnaReply" parameterType="com.ruda.s3.model.board.QnaVO">
		insert into qna values(
		board_seq.nextval,
		#{title},
		#{writer},
		#{contents},
		sysdate,
		0,
		#{ref},
		#{step},
		#{depth}
		)
	</insert>
	
	<update id="qnaReplyUpdate" parameterType="com.ruda.s3.model.board.QnaVO">
		update qna set step=step+1 where ref=#{ref} and step>#{step}
	</update>
</mapper>